<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<!--
    Checkstyle configuration that checks if a bundle is matching the Coding Guidelines in the Eclipse SmartHome project.

    For more information about the guidelines see - http://www.eclipse.org/smarthome/documentation/development/guidelines.html.

    Note that some of the required checks may be provided by some of the other plugins used in the Static Code Analysis tool.
 -->

<module name="Checker">

  <!-- Rules for Code Formatting -->
  <module name="FileTabCharacter">
    <property name="severity" value="error" />
    <property name="fileExtensions" value="java"/>
  </module>

  <!--See http://checkstyle.sourceforge.net/config_header.html#Header -->
  <module name="RegexpHeader">
    <!--  This property represents the severity level of a check violation. The valid options are:
        -ignore
        -info
        -warning
        -error   -->
    <!-- The default level of a check is "error". -->
    <!-- See http://checkstyle.sourceforge.net/config.html#Severity -->
    <property name="severity" value="error" />
    <property name="fileExtensions" value="java"/>
    <property name="header"
        value="${checkstyle.headerCheck.content}"
        default="^/\*\*$\n^ \* Copyright \(c\) \d\d\d\d-\d\d\d\d by the respective copyright holders\.$\n^ \*$\n^ \* All rights reserved\. This program and the accompanying materials$\n^ \* are made available under the terms of the Eclipse Public License v1\.0$\n^ \* which accompanies this distribution, and is available at$\n^ \* http://www.eclipse.org/legal/epl\-v10\.html$"/>
  </module>
  
  <module name="NewlineAtEndOfFile">
    <property name="severity" value="info"/>
  </module>

  <module name="org.openhab.tools.analysis.checkstyle.ExportInternalPackageCheck">
    <property name="severity" value="error" />
  </module>
    
  <module name="org.openhab.tools.analysis.checkstyle.ManifestExternalLibrariesCheck">
    <property name="severity" value="error" />
  </module>
  
  <module name="org.openhab.tools.analysis.checkstyle.BuildPropertiesExternalLibrariesCheck">
    <property name="severity" value="error" />
  </module>
  
  <module name="org.openhab.tools.analysis.checkstyle.OutsideOfLibExternalLibrariesCheck">
    <property name="severity" value="error" />
    <property name="ignoredDirectories" value="target,bin" />
  </module>
  
  <module name="org.openhab.tools.analysis.checkstyle.readme.MarkdownCheck">
    <property name="severity" value="warning" />
  </module>  
  
  <module name="org.openhab.tools.analysis.checkstyle.MavenPomderivedInClasspathCheck">
    <property name="severity" value="warning" />
  </module>

  <module name="org.openhab.tools.analysis.checkstyle.OverridingParentPomConfigurationCheck">
    <property name="severity" value="warning" />
  </module>

  <module name="org.openhab.tools.analysis.checkstyle.RequireBundleCheck">
      <property name="severity" value="error" />
      <property name="allowedRequireBundles" value="${checkstyle.requireBundleCheck.allowedBundles}" default="org.junit,org.mockito,org.hamcrest" />
   </module>

   <module name="org.openhab.tools.analysis.checkstyle.AboutHtmlCheck">
     <property name="severity" value="error" />
     <property name="validAboutHtmlFileURL" value="${checkstyle.aboutHtmlCheck.url}" default="https://raw.githubusercontent.com/openhab/openhab2-addons/master/src/etc/about.html" />
   </module>

  <module name="org.openhab.tools.analysis.checkstyle.BundleVendorCheck">
    <property name="severity" value="warning" />
    <property name="allowedValues" value="${checkstyle.bundleVendorCheck.allowedValues}" default="openHAB"/>
  </module>

  <module name="org.openhab.tools.analysis.checkstyle.ManifestJavaVersionCheck">
    <property name="severity" value="warning" />
    <property name="allowedValues" value="JavaSE-1.8"/>
  </module>

  <module name="org.openhab.tools.analysis.checkstyle.RequiredFilesCheck">
     <property name="severity" value="error" />
     <property name="extensions" value="${checkstyle.requiredFilesCheck.extensions}" default="html,properties,xml,MF" />
     <!-- Relative path to the root directory of the module-->
     <property name="requiredFiles" value="${checkstyle.requiredFilesCheck.files}" default="about.html,build.properties,pom.xml,META-INF/MANIFEST.MF" />
  </module>
   
  <module name="org.openhab.tools.analysis.checkstyle.BuildPropertiesCheck">
    <property name="severity" value="warning" />
    <!-- Other bin.includes values will be checked from a specific Checks (e.g.ServiceComponentManifestCheck) -->
    <!-- The bin.includes values must end with the "/" character -->
    <property name="expectedBinIncludesValues" value="META-INF/,." />
    <!-- output.. and source.. properties allow skipping the "/" character at the end of the value -->
    <property name="possibleOutputValues" value="target/classes,target/test-classes" />
    <property name="possibleSourceValues" value="src/main/java,src/main/resources,src/test/java,src/test/resources,src/main/groovy,src/test/groovy" />
  </module>
   
  <module name="org.openhab.tools.analysis.checkstyle.ServiceComponentManifestCheck">
    <property name="severity" value="error" />
  </module>

  <module name="org.openhab.tools.analysis.checkstyle.ImportExportedPackagesCheck">
    <property name="severity" value="warning" />
  </module>
  
  <module name="org.openhab.tools.analysis.checkstyle.ManifestPackageVersionCheck">
     <property name="severity" value="warning" />
     <property name="ignoreImportedPackages" value="org.junit.*"/>
  </module>
   
  <module name="org.openhab.tools.analysis.checkstyle.EshInfXmlValidationCheck">
    <property name="severity" value="error" />
    <property name="thingSchema" value="http://eclipse.org/smarthome/schemas/thing-description-1.0.0.xsd" />
    <property name="bindingSchema" value="http://www.eclipse.org/smarthome/schemas/binding-1.0.0.xsd" />
    <property name="configSchema" value="https://www.eclipse.org/smarthome/schemas/config-description-1.0.0.xsd" />
  </module>
  
  <module name="org.openhab.tools.analysis.checkstyle.EshInfXmlUsageCheck">
    <property name="severity" value="warning" />
  </module>
  
  <module name="org.openhab.tools.analysis.checkstyle.PomXmlCheck">
    <property name="severity" value="error" />
  </module>
  
  <module name="org.openhab.tools.analysis.checkstyle.PackageExportsNameCheck">
    <property name="severity" value="warning" />
    <property name="sourceDirectories" value="src/main/java" />
    <property name="excludedPackages" value=".*.internal.*" />
  </module>

  <module name="TreeWalker">
    <!-- See http://checkstyle.sourceforge.net/config_coding.html#IllegalThrows -->
    <module name="IllegalThrows">
      <property name="severity" value="warning" />
    </module>
    <!-- See http://checkstyle.sourceforge.net/config_coding.html#OneStatementPerLine -->
    <module name="OneStatementPerLine">
      <property name="severity" value="info" />
    </module>
    <!-- See http://checkstyle.sourceforge.net/config_misc.html#TodoComment -->
    <module name="TodoComment">
      <property name="format" value="(TODO)|(FIXME)" />
      <property name="severity" value="info" />
    </module>
    <!-- See http://checkstyle.sourceforge.net/config_modifier.html#ModifierOrder -->
    <module name="ModifierOrder">
      <property name="severity" value="info" />
    </module>
    <module name="org.openhab.tools.analysis.checkstyle.JavadocFilterCheck">
      <property name="severity" value="warning" />
      <property name="scope" value="public"/>
      <property name="checkInnerUnits" value="false"/>
      <property name="allowMissingParamTags" value="true"/>
      <property name="allowUnknownTags" value="true"/>
      <property name="tokens" value="INTERFACE_DEF,CLASS_DEF" />
      <message key="javadoc.missing" value="Missing Javadoc comment."/>
    </module>
    <module name="org.openhab.tools.analysis.checkstyle.DeclarativeServicesDependencyInjectionCheck">
      <property name="severity" value="warning" />
    </module>
    <module name="UnusedImports">
      <property name="processJavadoc" value="true"/>
      <property name="severity" value="info" />
    </module>
    
    <module name="org.openhab.tools.analysis.checkstyle.AuthorTagCheck">
      <property name="tag" value="@author"/>
      <property name="tagFormat" value="\S"/> <!-- the tag can be anything but whitespace -->
      <property name="checkInnerUnits" value="false"/>
      <property name="severity" value="error"/> <!-- A property defining what should be done if the author is missing. In our case we want the build to fail. -->
      <property name="tagSeverity" value="ignore"/> <!-- A property defining what should be done when the author tag is found. In our case we want to ignore it. -->
      <message key="type.missingTag" value="An author tag is missing"/>
    </module>
    
    <module name="org.openhab.tools.analysis.checkstyle.NoEmptyLineSeparatorCheck">
      <property name="severity" value="info"/>
    </module>

    <!-- Rules for Java Naming Convention -->

    <module name="PackageName">
      <property name="format"
              value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
      <property name="severity" value="info" />
    </module>
    <module name="TypeName">
      <property name="tokens"
              value="INTERFACE_DEF,CLASS_DEF"/>
      <property name="severity" value="info" />
    </module>
    <module name="MethodName">
      <property name="severity" value="info" />
    </module>
    <module name="ConstantName">
      <property name="severity" value="info" />
    </module>
    <module name="LocalFinalVariableName">
      <property name="severity" value="info" />
    </module>
    <module name="LocalVariableName">
      <property name="severity" value="info" />
    </module>
    <module name="StaticVariableName">
      <property name="severity" value="info" />
    </module>
  </module>
</module>
